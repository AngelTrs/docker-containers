---
version: "2.1"
services:
  diun:
    image: crazymax/diun:latest
    container_name: diun
    hostname: diun-apps
    network_mode: "bridge"
    command: serve
    environment:
      - TZ=${TZ}
      - LOG_LEVEL=info
      - LOG_JSON=false
      - DIUN_WATCH_WORKERS=20
      - DIUN_WATCH_SCHEDULE=0 23 * * *
      - DIUN_PROVIDERS_DOCKER=true
      - DIUN_PROVIDERS_DOCKER_WATCHBYDEFAULT=true
      - DIUN_PROVIDERS_DOCKER_WATCHSTOPPED=true
      - DIUN_NOTIF_GOTIFY_ENDPOINT=${GOTIFY_ENDPOINT}
      - DIUN_NOTIF_GOTIFY_TOKEN=${GOTIFY_TOKEN}
      - DIUN_WATCH_FIRSTCHECKNOTIF=true
    volumes:
      - diun-data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  freshrss:
    image: linuxserver/freshrss:latest
    container_name: freshrss
    network_mode: "bridge"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    ports:
      - 8033:80
    volumes:
      - freshrss-data:/config
    restart: unless-stopped

  fulltextrss:
    image: heussd/fivefilters-full-text-rss:latest
    container_name: fulltextrss
    ports:
      - 8034:80
    volumes:
      - fulltextrss-cache:/var/www/html/cache
    restart: unless-stopped

  librespeed:
    image: linuxserver/librespeed:5.2.5-ls167
    container_name: librespeed
    network_mode: "bridge"
    environment:
      - PUID=1000
      - PGUID=1000
      - TZ=${TZ}
      - PASSWORD=${LS_PASS}
    volumes:
      - librespeed-data:/config
    ports:
      - 8011:80
    restart: unless-stopped

  ocrmypdf:
    image: quay.io/cmccambridge/ocrmypdf-auto:latest
    container_name: ocrmypdf
    network_mode: "bridge"
    environment:
      - USERMAP_UID=1000
      - USERMAP_GID=1000
      - OCR_USE_POLLING_SCHEDULER=1
    volumes:
      - ${NDOCS}/4-unsorted/scans/ocr-input:/input
      - ${NDOCS}/4-unsorted/scans/ocr-output:/output
      - ocrmypdf-data:/config
    restart: unless-stopped

  shaarli:
    image: ghcr.io/shaarli/shaarli:latest
    container_name: shaarli
    ports:
      - 8022:80
    volumes:
      - shaarli-cache:/var/www/shaarli/cache
      - shaarli-data:/var/www/shaarli/data
    restart: unless-stopped

  changedetection:
    image: ghcr.io/dgtlmoon/changedetection.io
    container_name: changedetection
    hostname: changedetection
    volumes:
      - changedetection-data:/datastore
    environment:
      - PUID=1000
      - PGID=1000
    ports:
      - 5001:5000
    restart: unless-stopped

  microbin:
    image: danielszabo99/microbin:latest
    container_name: microbin
    environment:
      - MICROBIN_EDITABLE=true
      - MICROBIN_DEFAULT_EXPIRY=never
      - MICROBIN_HIGHLIGHTSYNTAX=true
      - MICROBIN_PUBLIC_PATH=${MB_PUBLIC_PATH}
      - MICROBIN_PRIVATE=true
    ports:
      - 8044:8080
    volumes:
      - microbin-data:/app/pasta_data
    restart: unless-stopped

  thelounge:
    image: lscr.io/linuxserver/thelounge:latest
    container_name: thelounge
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ${DOCKER_APP_DATA}/thelounge:/config
    ports:
      - 9000:9000
    restart: unless-stopped

  stirling-pdf:
    image: frooodle/s-pdf:latest
    container_name: stirling-pdf
    environment:
      - DOCKER_ENABLE_SECURITY=false
      - INSTALL_BOOK_AND_ADVANCED_HTML_OPS=false
      - LANGS=en_GB
    volumes:
      - ${DOCKER_APP_DATA}/stirling-pdf/trainingData:/usr/share/tessdata # Required for extra OCR languages
      - ${DOCKER_APP_DATA}/stirling-pdf/extraConfigs:/configs
    # - ./customFiles:/customFiles/
    # - ./logs:/logs/
    ports:
      - 8080:8080
    restart: unless-stopped

  planka:
    image: ghcr.io/plankanban/planka:latest
    container_name: planka
    volumes:
      - planka_user-avatars:/app/public/user-avatars
      - planka_project-background-images:/app/public/project-background-images
      - planka_attachments:/app/private/attachments
    ports:
      - 3000:1337
    environment:
      - BASE_URL=https://planka.atrs.dev
      - DATABASE_URL=${PL_DB_URL}
      - SECRET_KEY=${PL_SK}
      # - TRUST_PROXY=0
      # - TOKEN_EXPIRES_IN=365 # In days
      # related: https://github.com/knex/knex/issues/2354
      # As knex does not pass query parameters from the connection string we
      # have to use environment variables in order to pass the desired values, e.g.
      # - PGSSLMODE=<value>
      # Configure knex to accept SSL certificates
      # - KNEX_REJECT_UNAUTHORIZED_SSL_CERTIFICATE=false
      - DEFAULT_ADMIN_EMAIL=${PL_ADMIN_EMAIL} # Do not remove if you want to prevent this user from being edited/deleted
      - DEFAULT_ADMIN_PASSWORD=${PL_ADMIN_PASS}
      - DEFAULT_ADMIN_NAME=${PL_ADMIN_NAME}
      - DEFAULT_ADMIN_USERNAME=${PL_ADMIN_USERNAME}
      # - SHOW_DETAILED_AUTH_ERRORS=false # Set to true to show more detailed authentication error messages. It should not be enabled without a rate limiter for security reasons.
      # - ALLOW_ALL_TO_CREATE_PROJECTS=true
      # - OIDC_ISSUER=
      # - OIDC_CLIENT_ID=
      # - OIDC_CLIENT_SECRET=
      # - OIDC_ID_TOKEN_SIGNED_RESPONSE_ALG=
      # - OIDC_USERINFO_SIGNED_RESPONSE_ALG=
      # - OIDC_SCOPES=openid email profile
      # - OIDC_RESPONSE_MODE=fragment
      # - OIDC_USE_DEFAULT_RESPONSE_MODE=true
      # - OIDC_ADMIN_ROLES=admin
      # - OIDC_EMAIL_ATTRIBUTE=email
      # - OIDC_NAME_ATTRIBUTE=name
      # - OIDC_USERNAME_ATTRIBUTE=preferred_username
      # - OIDC_ROLES_ATTRIBUTE=groups
      # - OIDC_IGNORE_USERNAME=true
      # - OIDC_IGNORE_ROLES=true
      # - OIDC_ENFORCED=true
      # Email Notifications (https://nodemailer.com/smtp/)
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_NAME=${SMTP_NAME}
      # - SMTP_SECURE=true
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASS}
      - SMTP_FROM=${SMTP_FROM}
      # Optional fields: accessToken, events, excludedEvents
      # - |
      #   WEBHOOKS=[{
      #     "url": "http://localhost:3001",
      #     "accessToken": "notaccesstoken",
      #     "events": ["cardCreate", "cardUpdate", "cardDelete"],
      #     "excludedEvents": ["notificationCreate", "notificationUpdate"]
      #   }]

      # - SLACK_BOT_TOKEN=
      # - SLACK_CHANNEL_ID=
    restart: unless-stopped

  baikal:
    image: ckulka/baikal:nginx
    container_name: baikal
    ports:
      - 4080:80
    volumes:
      - ${DOCKER_APP_DATA}/baikal/config:/var/www/baikal/config
      - ${DOCKER_APP_DATA}/baikal/Specific:/var/www/baikal/Specific
    restart: unless-stopped

  jelu:
    image: wabayang/jelu
    container_name: jelu
    volumes:
      - ${DOCKER_APP_DATA}/jelu/config:/config
      - ${DOCKER_APP_DATA}/jelu/database:/database
      - ${DOCKER_APP_DATA}/jelu/files/images:/files/images
      - ${DOCKER_APP_DATA}/jelu/files/imports:/files/imports
      - /etc/timezone:/etc/timezone:ro
    ports:
      - 11111:11111
    restart: unless-stopped

volumes:
  diun-data:
    name: diun-data
  freshrss-data:
    name: freshrss-data
  fulltextrss-cache:
    name: fulltextrss-cache
  librespeed-data:
    name: librespeed-data
  ocrmypdf-data:
    name: ocrmypdf-data
  shaarli-cache:
    name: shaarli-cache
  shaarli-data:
    name: shaarli-data
  changedetection-data:
    name: changedetection-data
  microbin-data:
    name: microbin-data
  planka_user-avatars:
  planka_project-background-images:
  planka_attachments:
